openapi: 3.0.1
info:
  title: game-crud
  description: 'проект - это проект для работы с сущностью game'
  license:
    name: MIT open source license
  version: 0.0.1
servers:
  - url: https://localhost/
tags:
  - name: game-crud
    description: CRUDS для game
  - name: game
    description: создание, обновление, чтение,  и поиск игр мафии
paths:
  /game/player:
    post:
      tags:
        - addPlayer
      summary: добавить игрока в игру
      requestBody:
        description: Объект запроса для создания юнита
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPlayerRequest'
      responses:
        200:
          description: all responses
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/BaseResponse'
    put:
      tags:
        - updatePlayerInGame
      summary: добавить игрока в игру
      requestBody:
        description: Объект запроса для создания юнита
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPlayerRequest'
      responses:
        200:
          description: all responses
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/BaseResponse'

    delete:
      tags:
        - deletePlayerInGame
      summary: удалить игрока из игры
      requestBody:
        description: Объект запроса для удаления игрока из игры
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePlayerFromGameRequest'
      responses:
        200:
          description: all responses
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/BaseResponse'
  /game/notes:
    put:
      tags:
        - notes
      summary: updateNotes
      operationId: updateNotes
      requestBody:
        description: updateNotes object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNotesRequest'
        required: true
      responses:
        200:
          description: all responses
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/BaseResponse'

  /game/election:
    post:
      tags:
       - election
      summary: завершить голосование
      operationId: finishElection
      requestBody:
        description: Объект запроса для создания юнита
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinishElectionRequest'
        required: true
      responses:
        200:
          description: all responses
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/BaseResponse'

  /game:
    post:
      tags:
        - game
      summary: создать юнит
      operationId: createGame
      requestBody:
        description: Объект запроса для создания юнита
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGameRequest'
        required: true
      responses:
        200:
          description: all responses
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/BaseResponse'
    put:
      tags:
        - game
      summary: обновить информацию об игре
      operationId: update
      requestBody:
        description: Объект запроса для обновления игры
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGameRequest'
        required: true
      responses:
        200:
          description: all responses
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/BaseResponse'
    delete:
      tags:
        - game
      summary: Удалить юнита
      operationId: deleteGame
      parameters:
        - in: path
          name: gameUuid
          schema:
            type: string
            format: uuid
          required: true
          description: Numeric ID of the user to get
      responses:
        200:
          description: all responses
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/BaseResponse'

  /game/{gameUuid}:
    get:
      tags:
        - game
      summary: прочиатать информацию об игре
      operationId: readGame
      parameters:
        - in: path
          name: gameUuid
          schema:
            type: string
            format: uuid
          required: true
          description: Numeric ID of the user to get
      responses:
        200:
          description: all responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadGameResponse'

  /game/master:
    get:
      tags:
        - gameMaster
      summary: прочиатать информацию о юните
      operationId: readGameMaster
      parameters:
        - in: path
          name: gameMasterUuid
          schema:
            type: string
            format: uuid
          required: true
          description: Numeric ID of the gameMaster to get
      responses:
        200:
          description: all responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadGameMasterResponse'
    post:
      tags:
        - gameMaster
      summary: создать юнит
      operationId: creategameMaster
      requestBody:
        description: Объект запроса для создания юнита
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGameMasterRequest'
        required: true
      responses:
        200:
          description: all responses
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/BaseResponse'

    put:
      tags:
        - gameMaster
      summary: обновить информацию о gameMaster
      operationId: updateGameMaster
      requestBody:
        description: Объект запроса для обновления gameMaster
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGameMasterRequest'
        required: true
      responses:
        200:
          description: all responses
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/BaseResponse'
    delete:
      tags:
        - gameMaster
      summary: Удалить gameMaster
      operationId: deleteGameMaster
      parameters:
        - in: path
          name: gameMasterUuid
          schema:
            type: string
            format: uuid
          required: true
          description: Numeric ID of the gameMaster to delete
      responses:
        200:
          description: all responses
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/BaseResponse'
  /game/master/all:
    get:
      tags:
        - gameMaster
      summary: получить список gamemaster
      operationId: getAllGameMasters
      responses:
        200:
          description: all responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadAllGameMastersResponse'

  /user:
    get:
      tags:
        - user
      summary: прочиатать информацию о юните
      operationId: readUser
      parameters:
        - in: path
          name: userUuid
          schema:
            type: string
            format: uuid
          required: true
          description: Numeric ID of the user to get
      responses:
        200:
          description: all responses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadUserResponse'
    post:
      tags:
        - user
      summary: создать юнит
      operationId: createUser
      requestBody:
        description: Объект запроса для создания юнита
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        required: true
      responses:
        200:
          description: all responses
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/BaseResponse'
    put:
      tags:
        - user
      summary: обновить информацию о user
      operationId: updateUser
      requestBody:
        description: Объект запроса для обновления user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGameMasterRequest'
        required: true
      responses:
        200:
          description: all responses
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/BaseResponse'
components:
  schemas:
    ReadGameMasterResponse:
      description: Структура для ответа на запрос с информацией о юните
      allOf:
        - $ref: 'common.yaml#/components/schemas/BaseMessage'
        - $ref: 'common.yaml#/components/schemas/BaseResponse'
        - $ref: '#/components/schemas/GameMasterInfo'
    ReadUserResponse:
      description: Структура для ответа на запрос с информацией о юните
      allOf:
        - $ref: 'common.yaml#/components/schemas/BaseMessage'
        - $ref: 'common.yaml#/components/schemas/BaseResponse'
        - $ref: '#/components/schemas/UserInfo'
    ReadAllGameMastersResponse:
      description: Структура для ответа на запрос с информацией о юните
      allOf:
        - $ref: 'common.yaml#/components/schemas/BaseMessage'
        - $ref: 'common.yaml#/components/schemas/BaseResponse'
        - type: object
          properties:
            gameMasters:
              type: array
              items:
                $ref: '#/components/schemas/GameMasterInfo'
    AddPlayerRequest:
      description: Структура для создания юнита в репоизтории
      allOf:
        - type: object
          properties:
            nickName:
              type: string
            slot:
              type: integer
            playerUuid:
              type: string
              format: uuid
            gameUuid:
              type: string
              format: uuid
    DeletePlayerFromGameRequest:
      description: Структура для создания юнита в репоизтории
      type: object
      properties:
        playerUuid:
          type: string
          format: uuid
        gameUuid:
          type: string
          format: uuid
    PlayerToCardNumberDTO:
      description: Структура для создания юнита в репоизтории
      properties:
        playerUuid:
          type: string
          format: uuid
        playerNickName:
          type: string
        slot:
          type: integer
        role:
          type: string
        note:
          type: integer
        addPoints:
          type: number
    UpdatePlayerInGameRequest:
      description: Структура для создания юнита в репоизтории
      allOf:
        - $ref: 'common.yaml#/components/schemas/BaseRequest'
        - $ref: 'player.yaml#/components/schemas/GamePlayerInfo'
        - type: object
          properties:
            gameUuid:
              type: string
              format: uuid
    FinishElectionRequest:
      description: Структура для запроса конца голосования
      allOf:
        - $ref: '#/components/schemas/ElectionDTO'
    UpdateNotesRequest:
      description: updateNotesStructure
      type: object
      properties:
        gameUuid:
          type: string
          format: uuid
        slot:
          type: integer
        notes:
          type: integer

    ElectionDTO:
      description: Структура для запроса конца голосования
      type: object
      properties:
        electionId:
          type: string
          format: uuid
        sortOrder:
          type: integer
        gameUuid:
          type: string
          format: uuid
        dropdowns:
          type: array
          items:
            $ref: '#/components/schemas/ElectionDropDown'


    CreateGameRequest:
      description: Структура для создания юнита в репоизтории
      allOf:
        - $ref: '#/components/schemas/GameMetaInfo'

    CreateGameMasterRequest:
      description: Структура для создания юнита в репоизтории
      allOf:
        - $ref: 'common.yaml#/components/schemas/BaseMessage'
        - $ref: 'common.yaml#/components/schemas/BaseRequest'
        - $ref: '#/components/schemas/GameMasterInfo'

    CreateUserRequest:
      description: Структура для создания юнита в репоизтории
      allOf:
        - $ref: 'common.yaml#/components/schemas/BaseMessage'
        - $ref: 'common.yaml#/components/schemas/BaseRequest'
        - $ref: '#/components/schemas/UserInfo'

    ReadGameResponse:
      description: Структура для ответа на запрос с информацией о юните
      allOf:
        - $ref: 'common.yaml#/components/schemas/BaseMessage'
        - $ref: 'common.yaml#/components/schemas/BaseResponse'
        - $ref: '#/components/schemas/GameMetaInfo'

    ReadAllGamesResponse:
      description: Структура для ответа на запрос с информацией о юните
      allOf:
        - $ref: 'common.yaml#/components/schemas/BaseMessage'
        - $ref: 'common.yaml#/components/schemas/BaseResponse'
        - type: object
          properties:
            games:
              type: array
              items:
                $ref: '#/components/schemas/GameMetaInfo'
    UpdateGameRequest:
      description: Структура для запроса обновления существующего юнита
      allOf:
        - $ref: 'common.yaml#/components/schemas/BaseMessage'
        - $ref: 'common.yaml#/components/schemas/BaseRequest'
        - $ref: '#/components/schemas/GameMetaInfo'
    UpdateGameMasterRequest:
      description: Структура для запроса обновления существующего юнита
      allOf:
        - $ref: 'common.yaml#/components/schemas/BaseMessage'
        - $ref: 'common.yaml#/components/schemas/BaseRequest'
        - $ref: '#/components/schemas/GameMasterInfo'

    UpdateUserRequest:
      description: Структура для запроса обновления существующего юнита
      allOf:
        - $ref: 'common.yaml#/components/schemas/BaseMessage'
        - $ref: 'common.yaml#/components/schemas/BaseRequest'
        - $ref: '#/components/schemas/UserInfo'


    GameMetaInfo:
      description: мета-инфомация для юнита
      type: object
      properties:
        gameUuid:
          description: идентификатор игры
          type: string
          format: uuid
        name:
          description: имя игры
          type: string
        status:
          description: статус игры
          type: string
        gameTable:
          description: статус игры
          type: string
        victory:
          description: кто победил?
          type: string
        gameNumber:
          description: номер игры
          type: integer
          format: int64
        playerToCardNumber:
          type: array
          items:
            $ref: '#/components/schemas/PlayerToCardNumberDTO'
        players:
          type: array
          items:
            $ref: '#/components/schemas/UpdatePlayerInGameRequest'
        nights:
          type: array
          items:
            $ref: 'player.yaml#/components/schemas/NightInfo'
        elections:
          type: array
          items:
            $ref: '#/components/schemas/ElectionDTO'
        created:
          description: Когда игра создана?
          type: string
          format: date-time
        updated:
          description: Когда был апдейт?
          type: string
          format: date-time

    ElectionDropDown:
      description: мета-инфомация для юнита
      type: object
      properties:
        slot:
          type: integer
        playerUuid:
          type: string
          format: uuid
        nickName:
          type: string
        numberOfVotes:
          type: integer

    GameMasterInfo:
      description: мета-инфомация для юнита
      type: object
      properties:
        gameMasterUuid:
          description: идентификатор ведущего
          type: string
          format: uuid
        nickName:
          description: nick name ведущего
          type: string
        created:
          description: Когда создали?
          type: string
          format: date-time
        updated:
          description: Когда был апдейт?
          type: string
          format: date-time
    UserInfo:
      description: мета-инфомация для юнита
      type: object
      properties:
        userUuid:
          description: идентификатор ведущего
          type: string
          format: uuid
        userName:
          description: nick name ведущего
          type: string
        password:
          description: Когда создали?
          type: string
        firstName:
          description: Имя
          type: string
        lastName:
          description: Фамилия
          type: string
        email:
          description: email
          type: string
        phoneNumber:
          description: phoneNumber
          type: string

